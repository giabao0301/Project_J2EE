version: '3.8'

services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
    environment:
      node.name: es-node
      cluster.name: docker-cluster
      discovery.type: single-node
      bootstrap.memory_lock: true
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.license.self_generated.type: basic
      xpack.security.enabled: true
      ELASTIC_PASSWORD: elastic
    ports:
      - "9200:9200"
    healthcheck:
      interval: 30s
      retries: 10
      test: [ "CMD-SHELL", "curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null --user elastic:${ELASTIC_PASSWORD} http://localhost:9200" ]
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elk-net

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.15.2
    volumes:
      - ./docker/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    command: >
      bash -c "curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null --user elastic:${ELASTIC_PASSWORD} http://elasticsearch:9200/_security/user/kibana_system/_password -H 'Content-Type: application/json' -d '{\"password\": \"${KIBANA_PASSWORD}\"}' && /usr/local/bin/kibana-docker"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-net

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.15.2
    volumes:
      - ./docker/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./docker/logstash/config/logstash.conf:/usr/share/logstash/config/logstash.conf
      - ./docker/logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000/tcp"
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-net

volumes:
  elasticsearch-data:
    driver: local

networks:
  elk-net:
    driver: bridge